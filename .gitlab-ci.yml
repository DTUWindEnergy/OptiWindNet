stages:
  - test
  - deploy

.test_rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH
      changes:
        - optiwindnet/**/*
        - tests/**/*
    - when: manual

# ===== TEST OptiWindNet linux =====
test_linux:
  stage: test
  image: python:3.12
  tags: [linux]
  rules:
    - !reference [.test_rules, rules]
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  before_script:
    - apt-get update
    - apt-get install -y coinor-cbc
    - curl -L -o scip.deb https://www.scipopt.org/download/release/SCIPOptSuite-9.2.3-Linux-debian12.deb
    - apt-get install -y ./scip.deb
    - python3 -m venv tests/venv
    - source tests/venv/Scripts/activate
    - pip install -e .[test]
    - python3 --version
  script:
    - pytest --cov-report term-missing:skip-covered --cov=optiwindnet --cov-config .coveragerc

# ===== TEST OptiWindNet windows =====
test_windows:
  stage: test
  image: registry.windenergy.dtu.dk/dockerimages/windows-miniconda:ltsc2019
  tags: [docker-windows]
  rules:
    - !reference [.test_rules, rules]
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  before_script:
    # The next 3 lines install the Miniforge3 conda
    # - Invoke-WebRequest -UserAgent curl https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Windows-x86_64.exe -OutFile Miniforge3-Windows-x86_64.exe
    # - Start-Process -Wait -FilePath Miniforge3-Windows-x86_64.exe -ArgumentList "/InstallationType=JustMe","/RegisterPython=0","/S","/D=$($env:UserProfile)\condaforge"
    # - . "$($env:UserProfile)\condaforge\shell\condabin\conda-hook.ps1"
    - (conda shell.powershell hook) | Out-String | ?{$_} | Invoke-Expression   
    - conda config --add channels conda-forge
    - conda config --set channel_priority strict
    - conda create --name own_test python=3.12
    - conda activate own_test
    # the packages beyond the solvers are dependencies that would be pulled later via pip install
    - conda install scip coin-or-cbc numba networkx shapely scipy pyyaml bitarray pandas pillow
    - pip install -e .[test]
    - python --version
  script:
    - pytest --cov-report term-missing:skip-covered --cov=optiwindnet --cov-config .coveragerc

# ===== DEPLOY optiwindnet docs =====
make_pages:
  stage: deploy
  tags: [linux]
  pages: true
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - docs/**/*
    when: manual
  script:
    - apt-get update
    - apt-get -y install make pandoc graphviz
    - pip install .[docs] --upgrade
    - cd docs; make html
    - cd ../; mv docs/build/html public/
  artifacts:
    paths: [public]

# ===== DEPLOY publish optiwindnet on PyPI =====
pypi_linux:
  stage: deploy
  tags: [linux]
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/
  script:
    - pip install --upgrade pip build twine packaging
    - python3 -m build
    - twine upload dist/* -u $TWINE_USERNAME -p $TWINE_PASSWORD
