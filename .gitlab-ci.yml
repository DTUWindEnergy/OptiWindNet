image: continuumio/miniconda3

# ===== TEST OptiWindNet linux=====
#test_optiwindnet:
#  stage: 
#    test
#  script:
#  - pip install .[test]
#  - python -m pytest
#  tags:
#  - linux

# ===== TEST OptiWindNet windows=====
#test_optiwindnet_windows:
#  stage:
#    test
#  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
#  script:
#  - conda init powershell
#  - "if (test-path $PROFILE.CurrentUserAllHosts) { & $PROFILE.CurrentUserAllHosts}"
#  - conda activate optiwindnet_env
#  - pip install -e . --no-deps
#  - pytest --cov-report term-missing:skip-covered --cov=optiwindnet --cov-config .coveragerc
#  tags:
#  - ANMH_old
#
# ===== DEPLOY optiwindnet docs=====
pages:
  stage:  
    deploy
  script:  
  - apt-get update
  - apt-get -y install make pandoc graphviz
  - pip install --upgrade pip ipython ipykernel
  - ipython kernel install --name "python3" --user
  - pip install .[test,docs] --upgrade --no-deps
  - cd docs; make html
  - cd ../; mv docs/build/html public/
  artifacts:
    paths:
    - public
  only: 
  - /^test_docdeploy.*/ 
  - main
  tags: 
  - linux

# ===== DEPLOY publish optiwindnet on pypi=====
#pypi:
#  stage:
#    deploy
#  only:
#    - tags
#    - test_pypi
#  script:
#    - apt-get update
#    - apt-get install -y pandoc
#    - pip install --upgrade pip
#    - pip install pypandoc
#    - pip install . --upgrade
#    - python -c 'from git_utils import get_tag; get_tag(verbose=True)'
#    - python -m pip install -U setuptools wheel
#    - python setup.py sdist bdist_wheel
#    - python -m pip install -U twine
#    - python -c 'from git_utils import rename_dist_file; rename_dist_file()'
#    - twine upload dist/* -u $TWINE_USERNAME -p $TWINE_PASSWORD
#    #- twine upload --repository-url https://test.pypi.org/legacy/ dist/* -u $TWINE_USERNAME -p $TWINE_PASSWORD # for testing purposes
#  tags:
#  - linux

