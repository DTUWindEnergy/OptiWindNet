image: continuumio/miniconda3

stages:
  - test
  - deploy

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    
# ===== TEST OptiWindNet linux=====
test_linux:
  stage:
     test
  tags:  # runner platform
    - linux
  script:
    - eval "$(conda shell.bash hook)" || source /opt/conda/etc/profile.d/conda.sh
    - conda update -n base -y conda
    - conda install -n base -y conda-libmamba-solver
    - conda config --set solver libmamba
    # ensure strict conda-forge so we don't mix with defaults
    - conda config --add channels conda-forge
    - conda config --set channel_priority strict
    - conda env create -n optiwindnet_env -f environment.yml || conda env update -n optiwindnet_env --prune -f environment.yml
    - conda activate optiwindnet_env
    # install solvers from conda-forge explicitly
    - conda install -n optiwindnet_env -y -c conda-forge coin-or-cbc scip
    - python --version
    - pip install --upgrade pip
    - pip install .[test]
    - pytest --cov-report term-missing:skip-covered --cov=optiwindnet --cov-config .coveragerc

# ===== TEST OptiWindNet windows=====
test_windows:
  stage:
    test
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  script:
    - (conda shell.powershell hook) | Out-String | ?{$_} | Invoke-Expression
    - conda update conda
    - conda install -n base conda-libmamba-solver
    - conda config --set solver libmamba
    - conda env create --file environment.yml
    - if ($LASTEXITCODE) {conda env update --prune -n optiwindnet_env --file environment.yml}
    - conda activate optiwindnet_env
    - conda install coin-or-cbc scip
    - python --version
    - pip install -e .[test]
    - python -m pytest
    - pytest --cov-report term-missing:skip-covered --cov=optiwindnet --cov-config .coveragerc
  tags:
    - ANMH_old  # Windows runner

# ===== DEPLOY optiwindnet docs=====
make_pages:
  pages: true
  # rules:
  #   - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  #     changes:
  #       - docs/**/*
  when: manual
  stage: deploy
  script:
    - apt-get update
    - apt-get -y install make pandoc graphviz
    - pip install .[docs] --upgrade
    - cd docs; make html
    - cd ../; mv docs/build/html public/
  artifacts:
    paths:
      - public
  tags: 
    - linux

# ===== DEPLOY publish optiwindnet on pypi=====
pypi_linux:
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+.\d+.\d+/
  stage:
    deploy
  script:
    - pip install --upgrade pip build twine packaging
    - python3 -m build
    - twine upload dist/* -u $TWINE_USERNAME -p $TWINE_PASSWORD
  tags:
    - linux
